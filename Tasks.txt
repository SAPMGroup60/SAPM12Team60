Tasks
I noted some tasks that I think we should do in order to implement the required features.

1) Install the required software project management tools (build control, Revision control, Unit/regression testing, Bug/issue tracking, Documentation generation, Integrated suites).
2) Familiarize with the tools.
3) Gather the functionalities (We already have them).
4) Categorize them.
5) Use case diagram.
6) Use cases and descriptions.
7) Class diagram.
8) CRC cards. (Maybe we can skip that task).
9) Sequence Diagram
10) Activity Diagram
11) Implementation.
12) Testing.

*************************************************************************************************************************

1} Project Planning
Determine project team
Decide on the hardware/software required (What interfaces, packages, applications will be required to implement the project).

2} Requirements Gathering

Creation of requirement specification document (FRS) from BRS (Business Requirement Specification)
Verify the requirement specification document
Preparation of use case/class/activity diagrams
Make sure the hardware/software is in place

3} Knowledge transfer sessions from BA to Dev and Test Team

Meetings to check if the understanding is correct (MOM)

5} Design of HLD and LLD documents – technical architect prepares both

6} Development of Prototype Env 

Online portal setup/website, creation and maintenance of databases, development of business logic (Workflow management)

7} Test Case Drafting & Test Plan Preparation

8} Actual development of Environment, in parallel with Regression testing

9} Unit testing of every module , in parallel defect finding and fixing

10} Integration test phase - internal

11} System test phase – defect finding and fixing

12} Integration test phase – – defect finding and fixing -- with external third parties

13} Code Deployment 

14} User acceptance (Customer Integration test performed on behalf of customer by third party users)

15} Go Live

***************************************************************************************************************************

Requirements that cannot be expressed as tasks

1.01 Manual changes to data: ad hoc frequency
( This is a description of a specific feature that a function should have. However this cannot be expressed as a task, because there is no way to estimate how long to implement this specifically. )

1.02 Read access: lock data fields so that a record can be updated by only one user at a time
( Again, this is a description of a feature that the function of changing data by users. To implement that function can be expressed as a task, and this feature should be a performance of the function. )

1.03 Portal display: member details in full
( A requirement for displaying, not a concrete thing to do. )

1.04 Account set-up: customer hierarchy
( Similarly, this is a requirement for the feature of customer hierarchy. It can be the result of the function, but not a thing to implement by the team. )

1.05 Web channel: secure access
( A demand for the secure access. This should be considered in the process of implementing web. )

1.06 Claims workflow: facilitated and transparent
( This is a demand for the function of making claims through the web. )

1.08 Scalability: data received from customers
( A demand for the function of uploading data by users. This should be considered to achieve when implement that function, but not be seen as a specific task. )

1.09 Flexibility: data standards
( A demand for the strategy of storing data. )

1.1 Distribution: fixed time considerations
( A demand for the function of making claims. )

1.11 Claims: multiple file formats
( Same as 1.06, a demand for the function of making claims through the web. Should be considered in the process of implementing the function. )

1.13 Claims: multiple claims against a single right by an individual member
( Another demand for the function of making claims. )

1.14 Synchronisation of media database and rights information: near real time
( A requirement for the update of media database and rights information. Should be considered in the process of designing the system of storing data. )

1.16 Funds: holds on distribution 
( A demand for the function of managing payment. Should be considered in the process of implementing the function. )

1.17 GUI: user friendly CS interface
( The requirement of designing GUI. Should be considered in the process of designing GUI style. )

*************************************************************************************************************************************
1.4,1.5 Manage Disputes and Manage Queries
--------------------------------------------

1)WorkFlow Management(Bussiness Logic)

1.40 Workflow management to support and guide users through the disputes
process

1.41 Provide automated communication between Smart Media Ltd and its
relevant parties involved in the dispute to ensure all parties are fully aware
of the status

1.42 Enable disputes to be raised from other prcesses

1.44 Allow Smart Media Ltd to hold funds when a dispute arises

1.45 Send request to claimant for proof of claim when rights information is
disputed

1.46 Log receipt of evidence provided by the disputer

1.49 Provide workflow management to support and guide customer service
teams through the management of queries received

1.50 Support automated communication to Customers



2) Web Design

1.43 Enable submission of a dispute via the online web channel

1.52 Enable users to view customer details

1.54 Enable users to view customer usage and transactions

1.55 Enable users to update customer details


3) DB Management(Repository)

1.47 Update rights and media repository following completion of dispute process

--------------------------------------------------------------------------
Athina

SMART MEDIA LTD CRM will provide e-commerce capabilities for:
E-marketing supports demand generation and customer loyalty processes over the internet so the customers Web experiences are personalized to provide the most relevant and convenient online experience and information.
E-selling runs complete sales process on the Internet so customers receive personalized interactive and easy to use sales and self service functions while companies streamline sales and fulfillment operations with an end-to-end, order-to-cash process.
E-service provides Web-based self-service applications that give access to enterprise knowledge and services so customers can obtain information at any time.
In the following lines there is a list of the major tasks that are required for our team to implement the requested features as given within our Case Study and the whole overview. Task1 to Task3 and some sub tasks (that are mentioned below) represent tasks of higher level that are not stated clearly in the Deloitte case study but we think that are necessary to be included in the following list. Though, Task4 and Task5 correspond directly to the given Functional Requierments. I feel we should mention the type of software development design weare going to follow
http://en.wikipedia.org/wiki/Software_development_process#Iterative_and_incremental_development
http://en.wikipedia.org/wiki/Unified_Process
Task 1
[Analysis]

1.1 Requirements
1.2 Risk
1.3 Documentation of analysis
Task 2
[Plan (time and resources)]

2.1 Time schedule of the project
2.2 Human resources allocation
2.3 Documentation of plan

Task 3
[Design]

This group of tasks is not mentioned in a clear way in the requirements document but it is a necessary in order to implement the requirements. So the group has decided on expanding more and thinking in a more creative way as regards that part of the project.

3.1 Design the database schemata which will include 		the media
the play list database
      the rights
      the membership details
3.2 Design the finance interface
3.3 Design the user interfaces for functionalities (GUI) / web channel
3.4 Design the user interfaces for staff and customers (GUI) / web channel
3.5 Documentation for Design

Task 4
[Implementation]

Development of interfaces and components, then mention the respective requirements(take into account several versions of software = releases).
 
Task 5
[Test]

5.1 Unit test of the existing software
5.2 Integrated Test for different parts of the software
5.3 System Test (???)
5.4

Task 6
[Maintainance]

Deployment starts after the code is appropriately tested, approved for release, and sold or otherwise distributed into a production environment. This may involve installation, customization (e.g. by setting parameters to the customer's values), testing, and possibly an extended period of evaluation.
Software training and support is important, as software is only effective if it is used correctly.
Maintaining and enhancing software to cope with newly discovered faults or requirements can take substantial time and effort, as missed requirements may force redesign of the software.This is not exactly a task that it is necessary for the completeness of the
system but is a necessary task so as the system can be “alive” while time
passes.
Non functional requirements are the ones which specify criteria that can be used to judge the operation of a system, rather than specific behaviors.Maybe it is good to mention them.
If we assume that we are the Technology group of the company we should take into account that the CRM system is not only matter of technology, but also of management marketing etc. So there should be a cooperation which we should mention.





